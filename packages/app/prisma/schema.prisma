// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DB_URL")
  directUrl = env("DB_DIRECT_URL")
}

model User {
  id                   String        @id @default(uuid())
  email                String        @unique
  password             String
  name                 String?
  username             String
  defaultWallet        String?
  createdAt            DateTime      @default(now())
  lastTransactionDate  DateTime?
  isAdmin              Boolean       @default(false)
  wallet               Wallet[]
  clabe                Clabe[]
  transactionSender    Transaction[] @relation("sender")
  transactionRecipient Transaction[] @relation("recipient")
}

model Wallet {
  id             String @id @default(uuid())
  address        String
  user           User   @relation(fields: [userId], references: [id])
  userId         String
}

model Clabe {
  id     String @id @default(uuid())
  clabe  String
  type   String
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

enum TransactionState {
  INITIATED
  FAILED
  SUCCEED
}

model Transaction {
  transactionHash String           @unique
  amount          Decimal
  cashback        Int              @default(0)
  state           TransactionState @default(INITIATED)
  sender          User             @relation("sender", fields: [senderId], references: [id])
  senderId        String
  recipient       User             @relation("recipient", fields: [recipientId], references: [id])
  recipientId     String
  createdAt       DateTime         @default(now())
}
